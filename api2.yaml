openapi: 3.0.0
info:
  contact:
    name: ''
  title: D1 Services API - Event API
  version: '1.0'
  description: D1 Services API - Event API<br/> This API is used by D1 to notify the bank of any kind of usefull event related to the consumer and all its assets
security:
  - bearerAuth: []
paths:
  '/notifications/{notificationId}':
    put:
      description: This request is used by D1 to notify the bank about any event related to the consumer and all its assets.
      parameters:
        - $ref: '#/components/parameters/notification-id-path'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: No content
        '404':
          description: Consumer was not found
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
                    description: Consumer was not found.
        '500':
          description: Unexpected error
      summary: Event Notification
      tags:
        - Notificatios
      operationId: eventNotification
servers:
  - url: /d1/../v1
components:
  parameters:
    notification-id-path:
      description: The unique identifier of the event notification
      in: path
      name: notificationId
      required: true
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      description: |-
        A JWT using the Bearer schema.
        The server checks the validity of the provided token to control access to this protected resource.
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Event:
      allOf:
                - type: object
                  required:
                    - notificationType
                    - cardId
                    - status
                    - action
                  properties:
                    notificationType:
                      type: string
                      enum:
                        - virtualCardEvent
                        - digitalCardEvent
                    cardId:
                      type: string
                    status:
                      type: string
                      enum:
                        - ACTIVE
                        - SUSPENDED
                        - DELETED
                    action:
                      type: string
                      enum:
                        - CREATE
                        - ACTIVATE
                        - SUSPEND
                        - DELETE
                        - RENEW
                - oneOf:
                  - $ref: '#/components/schemas/virtualCardEvent'
                  - $ref: '#/components/schemas/digitalCardEvent'
                  discriminator:
                    propertyName: notificationType
                    mapping:
                      virtualCardEvent: '#/components/schemas/virtualCardEvent'
                      digitalCardEvent: '#/components/schemas/digitalCardEvent'
    virtualCardEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
    digitalCardEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          required:
            - eventType
            - cardId
            - status
          properties:
            tokenRequestorId:
              type: string
            tokenStorageType:
              type: string
              enum:
                - PHONE
                - WEARABLE
tags:
  - name: Notifications
